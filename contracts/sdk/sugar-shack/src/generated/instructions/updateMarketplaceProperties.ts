/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as web3 from '@solana/web3.js'
import * as beet from '@metaplex-foundation/beet'
import * as beetSolana from '@metaplex-foundation/beet-solana'

/**
 * @category Instructions
 * @category UpdateMarketplaceProperties
 * @category generated
 */
export type UpdateMarketplacePropertiesInstructionArgs = {
  authority: beet.COption<web3.PublicKey>
  share: beet.COption<number>
}
/**
 * @category Instructions
 * @category UpdateMarketplaceProperties
 * @category generated
 */
export const updateMarketplacePropertiesStruct = new beet.FixableBeetArgsStruct<
  UpdateMarketplacePropertiesInstructionArgs & {
    instructionDiscriminator: number[] /* size: 8 */
  }
>(
  [
    ['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)],
    ['authority', beet.coption(beetSolana.publicKey)],
    ['share', beet.coption(beet.u16)],
  ],
  'UpdateMarketplacePropertiesInstructionArgs'
)
/**
 * Accounts required by the _updateMarketplaceProperties_ instruction
 *
 * @property [**signer**] authority
 * @property [_writable_] marketplaceProps
 * @category Instructions
 * @category UpdateMarketplaceProperties
 * @category generated
 */
export type UpdateMarketplacePropertiesInstructionAccounts = {
  authority: web3.PublicKey
  marketplaceProps: web3.PublicKey
}

export const updateMarketplacePropertiesInstructionDiscriminator = [
  56, 7, 227, 235, 153, 143, 29, 213,
]

/**
 * Creates a _UpdateMarketplaceProperties_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category UpdateMarketplaceProperties
 * @category generated
 */
export function createUpdateMarketplacePropertiesInstruction(
  accounts: UpdateMarketplacePropertiesInstructionAccounts,
  args: UpdateMarketplacePropertiesInstructionArgs,
  programId = new web3.PublicKey('9T5Xv2cJRydUBqvdK7rLGuNGqhkA8sU8Yq1rGN7hExNK')
) {
  const [data] = updateMarketplacePropertiesStruct.serialize({
    instructionDiscriminator:
      updateMarketplacePropertiesInstructionDiscriminator,
    ...args,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.authority,
      isWritable: false,
      isSigner: true,
    },
    {
      pubkey: accounts.marketplaceProps,
      isWritable: true,
      isSigner: false,
    },
  ]

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  })
  return ix
}
