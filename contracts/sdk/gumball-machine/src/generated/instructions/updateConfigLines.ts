/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'

/**
 * @category Instructions
 * @category UpdateConfigLines
 * @category generated
 */
export type UpdateConfigLinesInstructionArgs = {
  startingLine: beet.bignum
  newConfigLinesData: Uint8Array
}
/**
 * @category Instructions
 * @category UpdateConfigLines
 * @category generated
 */
export const updateConfigLinesStruct = new beet.FixableBeetArgsStruct<
  UpdateConfigLinesInstructionArgs & {
    instructionDiscriminator: number[] /* size: 8 */
  }
>(
  [
    ['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)],
    ['startingLine', beet.u64],
    ['newConfigLinesData', beet.bytes],
  ],
  'UpdateConfigLinesInstructionArgs'
)
/**
 * Accounts required by the _updateConfigLines_ instruction
 *
 * @property [_writable_] gumballMachine
 * @property [**signer**] authority
 * @category Instructions
 * @category UpdateConfigLines
 * @category generated
 */
export type UpdateConfigLinesInstructionAccounts = {
  gumballMachine: web3.PublicKey
  authority: web3.PublicKey
}

export const updateConfigLinesInstructionDiscriminator = [
  20, 200, 2, 139, 44, 67, 109, 26,
]

/**
 * Creates a _UpdateConfigLines_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category UpdateConfigLines
 * @category generated
 */
export function createUpdateConfigLinesInstruction(
  accounts: UpdateConfigLinesInstructionAccounts,
  args: UpdateConfigLinesInstructionArgs
) {
  const { gumballMachine, authority } = accounts

  const [data] = updateConfigLinesStruct.serialize({
    instructionDiscriminator: updateConfigLinesInstructionDiscriminator,
    ...args,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: gumballMachine,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: authority,
      isWritable: false,
      isSigner: true,
    },
  ]

  const ix = new web3.TransactionInstruction({
    programId: new web3.PublicKey(
      'GBALLoMcmimUutWvtNdFFGH5oguS7ghUUV6toQPppuTW'
    ),
    keys,
    data,
  })
  return ix
}
