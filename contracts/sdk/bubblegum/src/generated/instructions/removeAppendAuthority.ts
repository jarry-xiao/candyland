/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet'
import * as web3 from '@solana/web3.js'

/**
 * @category Instructions
 * @category RemoveAppendAuthority
 * @category generated
 */
export const removeAppendAuthorityStruct = new beet.BeetArgsStruct<{
  instructionDiscriminator: number[] /* size: 8 */
}>(
  [['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)]],
  'RemoveAppendAuthorityInstructionArgs'
)
/**
 * Accounts required by the _removeAppendAuthority_ instruction
 *
 * @property [**signer**] appendAuthority
 * @property [] authorityToRemove
 * @property [_writable_] authority
 * @category Instructions
 * @category RemoveAppendAuthority
 * @category generated
 */
export type RemoveAppendAuthorityInstructionAccounts = {
  appendAuthority: web3.PublicKey
  authorityToRemove: web3.PublicKey
  authority: web3.PublicKey
}

export const removeAppendAuthorityInstructionDiscriminator = [
  30, 148, 100, 64, 27, 43, 81, 112,
]

/**
 * Creates a _RemoveAppendAuthority_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @category Instructions
 * @category RemoveAppendAuthority
 * @category generated
 */
export function createRemoveAppendAuthorityInstruction(
  accounts: RemoveAppendAuthorityInstructionAccounts,
  programId = new web3.PublicKey('BGUMAp9Gq7iTEuizy4pqaxsTyUCBK68MDfK752saRPUY')
) {
  const [data] = removeAppendAuthorityStruct.serialize({
    instructionDiscriminator: removeAppendAuthorityInstructionDiscriminator,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.appendAuthority,
      isWritable: false,
      isSigner: true,
    },
    {
      pubkey: accounts.authorityToRemove,
      isWritable: false,
      isSigner: false,
    },
    {
      pubkey: accounts.authority,
      isWritable: true,
      isSigner: false,
    },
  ]

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  })
  return ix
}
